// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"database/sql"
	"github.com/antunesgabriel/gopher-template-default/internal/application/repository"
	"github.com/antunesgabriel/gopher-template-default/internal/application/usecase"
	"github.com/antunesgabriel/gopher-template-default/internal/config"
	"github.com/antunesgabriel/gopher-template-default/internal/delivery/api"
	"github.com/antunesgabriel/gopher-template-default/internal/delivery/api/controller"
	"github.com/antunesgabriel/gopher-template-default/internal/helper"
	"github.com/antunesgabriel/gopher-template-default/internal/infra"
	"github.com/antunesgabriel/gopher-template-default/internal/infra/pgrepository"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitServer(db *sql.DB, signKey config.SignKey) *api.Server {
	chiRouter := infra.NewChiRouter()
	postgresRepository := pgrepository.NewPostgresRepository(db)
	postgresUserRepository := pgrepository.NewPostgresUserRepository(postgresRepository)
	bcryptPasswordHelper := infra.NewBcryptPasswordHelper()
	createLocalUserUseCase := usecase.NewCreateLocalUserUseCase(postgresUserRepository, bcryptPasswordHelper)
	createLocalUserController := controller.NewCreateLocalUserController(createLocalUserUseCase)
	postgresHealthRepository := pgrepository.NewPostgresHealthRepository(postgresRepository)
	checkHealthUseCase := usecase.NewCheckHealthUseCase(postgresHealthRepository)
	checkHealthController := controller.NewCheckHealthController(checkHealthUseCase)
	chiJWTHelper := infra.NewChiJWTHelper(signKey)
	localAuthUseCase := usecase.NewLocalAuthUseCase(postgresUserRepository, chiJWTHelper, bcryptPasswordHelper)
	authLocalController := controller.NewAuthLocalController(localAuthUseCase)
	server := api.NewServer(chiRouter, createLocalUserController, checkHealthController, authLocalController)
	return server
}

// wire.go:

var RepositorySet = wire.NewSet(pgrepository.NewPostgresRepository, pgrepository.NewPostgresUserRepository, pgrepository.NewPostgresHealthRepository)

var UseCaseSet = wire.NewSet(
	HelperSet, wire.Bind(new(helper.PasswordHelper), new(*infra.BcryptPasswordHelper)), RepositorySet, wire.Bind(new(repository.UserRepository), new(*pgrepository.PostgresUserRepository)), usecase.NewCreateLocalUserUseCase, wire.Bind(new(repository.HealthRepository), new(*pgrepository.PostgresHealthRepository)), usecase.NewCheckHealthUseCase, wire.Bind(new(helper.JWTHelper), new(*infra.ChiJWTHelper)), usecase.NewLocalAuthUseCase,
)

var ControllerSet = wire.NewSet(controller.NewCreateLocalUserController, controller.NewCheckHealthController, controller.NewAuthLocalController)

var ServerSet = wire.NewSet(infra.NewChiRouter, wire.Bind(new(api.Router), new(*infra.ChiRouter)), api.NewServer)

var HelperSet = wire.NewSet(infra.NewBcryptPasswordHelper, infra.NewChiJWTHelper)
